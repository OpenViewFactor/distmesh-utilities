function oM = generateSphere(r, N)
  golden_ratio = (1 + sqrt(5)) / 2;
  rectangle_half_height = sqrt( 1 / (1 + golden_ratio^2) );
  rectangle_half_width = rectangle_half_height * golden_ratio;
  xy_rectangle_vertices = [-rectangle_half_width,  rectangle_half_height, 0; ...
                            rectangle_half_width,  rectangle_half_height, 0; ...
                            rectangle_half_width, -rectangle_half_height, 0; ...
                           -rectangle_half_width, -rectangle_half_height, 0];
  xz_rectangle_vertices = [-rectangle_half_height, 0,  rectangle_half_width; ...
                            rectangle_half_height, 0,  rectangle_half_width; ...
                            rectangle_half_height, 0, -rectangle_half_width; ...
                           -rectangle_half_height, 0, -rectangle_half_width];
  yz_rectangle_vertices = [0, -rectangle_half_width,  rectangle_half_height; ...
                           0,  rectangle_half_width,  rectangle_half_height; ...
                           0,  rectangle_half_width, -rectangle_half_height; ...
                           0, -rectangle_half_width, -rectangle_half_height];
  vertices = [xy_rectangle_vertices; xz_rectangle_vertices; yz_rectangle_vertices];
  connectivity = [1,4,5;...
                  1,5,10;...
                  1,8,4;...
                  1,11,8;...
                  4,9,5;...
                  4,12,9;...
                  4,8,12;...
                  5,6,10;...
                  5,9,6;...
                  9,3,6;...
                  9,12,3;...
                  3,2,6;...
                  3,7,2;...
                  3,12,7;...
                  2,10,6;...
                  2,11,10;...
                  2,7,11;...
                  7,12,8;...
                  7,8,11;...
                  11,1,10];

  slerp = @(p1, p2, t) sin( (1-t)*acos(dot(p1,p2)) ) / sin(acos(dot(p1,p2))) * p1 + sin(t*acos(dot(p1,p2))) / sin(acos(dot(p1,p2))) * p2;

  for i = 1 : N
    initial_connectivity_size = size(connectivity,1);
    for tri = 1 : initial_connectivity_size
      v4 = slerp(vertices(connectivity(tri,1),:), vertices(connectivity(tri,2),:), 0.5);
      v5 = slerp(vertices(connectivity(tri,2),:), vertices(connectivity(tri,3),:), 0.5);
      v6 = slerp(vertices(connectivity(tri,3),:), vertices(connectivity(tri,1),:), 0.5);
      vertices = [vertices; v4; v5; v6];
      connectivity = [connectivity;...
        connectivity(tri,1), size(vertices,1)-2, size(vertices,1);...
        connectivity(tri,2), size(vertices,1)-1, size(vertices,1)-2;...
        connectivity(tri,3), size(vertices,1), size(vertices,1)-1;...
        size(vertices,1)-2, size(vertices,1)-1, size(vertices,1)];
    end
    connectivity(1:initial_connectivity_size,:) = [];
  end
  vertices = vertices .* r;
  oM = triangulation(connectivity, vertices);
end