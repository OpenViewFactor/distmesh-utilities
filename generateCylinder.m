function generateCylinder(zmin, zmax, thmin, thmax, r, baseCenter, scale, output_path)
  [r_theta_positions, connections] = distmesh2d(@drectangle, ...
    @huniform, ...
    min([zmax-zmin,thmax-thmin])/scale, ...
        [zmin,thmin;zmax,thmax], ...
        [zmin,thmin; zmax,thmin; zmin,thmax; zmax,thmax], ...
        [zmin,zmax,thmin,thmax]);
  
  positions = [baseCenter(1) + cos(r_theta_positions(:,2)) .* r, ...
               baseCenter(2) + sin(r_theta_positions(:,2)) .* r, ...
               r_theta_positions(:,1)];
  inner_mesh = triangulation(connections, positions);
  outer_mesh = flipNormals(inner_mesh);
  num_triangles = length(inner_mesh.ConnectivityList(:,1));
  stlwrite(inner_mesh, ...
   [output_path, ...
    '/inner-r=',num2str(r), ...
    'cent=',num2str(baseCenter(1)),',',num2str(baseCenter(2)), ...
    'h=',num2str(zmax-zmin), ...
    '-numtri=',num2str(num_triangles),'.stl'], ...
  'binary')
  stlwrite(outer_mesh, ...
  [output_path,
   '/outer-r=',num2str(r), ...
   'cent=',num2str(baseCenter(1)),',',num2str(baseCenter(2)), ...
   'h=',num2str(zmax-zmin), ...
   '-numtri=',num2str(num_triangles),'.stl'], ...
  'binary')

end